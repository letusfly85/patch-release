apply plugin: 'groovy'
apply plugin: 'scala'
apply plugin: 'application'

import org.apache.tools.ant.filters.FixCrLfFilter
import org.apache.tools.ant.filters.ReplaceTokens

repositories {
    //ivy { urls: "${System.properties['user.home']}/.ivy2/local" }
    /*ivy {
        url new File(System.getProperty('user.home'),'.ivy2/local').absolutePath
    }*/
    mavenCentral()
    /*
    maven {
        url "$nexusUrl/content/repositories/jyb-jenkins"
    }
    */
}

mainClassName = "com.jellyfish85.patchRelease.facade.PatchReleaseFacade"

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.1.5'

    compile 'org.scala-lang:scala-compiler:2.9.2'

    compile 'org.scala-lang:scala-library:2.9.2'

    compile 'org.tmatesoft.svnkit:svnkit:1.3.3'

    compile 'commons-io:commons-io:2.4'

    //compile 'com.jellyfish85:dbaccessor:1.0-SNAPSHOT'
    compile files('lib/dbaccessor.jar')

    runtime files('lib/classes12.jar')
}

run {
    // dynamic arguments (from "-Prunargs=..." on gradle command line)
    if (project.hasProperty('runargs')) {
        args project.runargs.split(',')
        println(args)
    }
}

/*
task execGroovy (type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "example.Script"
}


task execScala (type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "com.jellyfish85.patchRelease.executor.PatchReleaseFacade"
}

task replaceStr (type: Copy) {
    from 'src/main/resources'
    into 'build'
    filter(ReplaceTokens, tokens: [aaa: "AAA"])
}
*/